import type { Metadata } from "next";
import { Inter } from "next/font/google";

import "./globals.scss";

import { Footer } from "@/components/common/Footer/Footer";

import { AntdRegistry } from "@ant-design/nextjs-registry";
import ClientOnly from "@/components/ATest/ClientOnly";
import { ToastProvider } from "@/components/ATest/ToasterProvider";
import { IPageProps } from "@/types/IType";
import { locales } from "@/config";
import { ReactNode, Suspense } from "react";
import { getMessages, unstable_setRequestLocale } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { Header } from "@/components/common/Header/Header";
import { ReduxProvider } from "@/store/provider";
import Loading from "./loading";

const inter = Inter({ subsets: ["latin"] });
type Props = {
  children: ReactNode;
  params: { locale: string };
};
// export const metadata: Metadata = {
//   title: "Places Gold",
//   description: "Generated by create next app",
// };
export async function generateMetadata() {
  return {
    title: process.env.BASE_NAME,
  };
}
export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}
interface IRootLayoutProps extends IPageProps {
  children: React.ReactNode;
}
export default async function RootLayout({
  children,
  params: { locale },
}: IRootLayoutProps) {
  unstable_setRequestLocale(locale);
  const messages = await getMessages();

  return (
    <html lang={locale}>
      <link rel="icon" href="/icons/favicon small.svg" sizes="any" />

      <body className={inter.className}>
        <ReduxProvider>
          {/* <AntdRegistry> */}
            <NextIntlClientProvider messages={messages}>
              <Header />

              {/* <ClientOnly>
                    <ToastProvider />
                  </ClientOnly> */}
              <Suspense fallback={<Loading />}>
                <main>{children}</main>
              </Suspense>

              <Footer />
            </NextIntlClientProvider>
          {/* </AntdRegistry> */}
        </ReduxProvider>
      </body>
    </html>
  );
}
